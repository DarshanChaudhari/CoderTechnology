package com.jp.hr.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

@Entity(name="complaintRecord")
@Table(name="COMPLAINT")
public class Complaint {
	
	
	private int complaintId;
	
	@NotNull
	@Size(min = 10, max = 10, message="Account Id not meeting size constraints.")	
	private int accountId;
		
	private String branchCode;
	
	@NotNull
	@Size(min = 3, max = 20, message="Email Id not meeting size constraints.")
	@Pattern(regexp = "[a-z-A-Z]*", message = "Email Id has invalid characters")
	private String emailId;
	private String category;
	private String description;
	private String priority;
	private String status;
	
	public Complaint() {
		super();
		
	}

	@Column(name="COMPLAINTID")
	public int getComplaintId() {
		return complaintId;
	}

	public void setComplaintId(int complaintId) {
		this.complaintId = complaintId;
	}
	
	@Id
	@Column(name="EMPID")
	public int getAccountId() {
		return accountId;
	}

	public void setAccountId(int accountId) {
		this.accountId = accountId;
	}

	public String getBranchCode() {
		return branchCode;
	}

	public void setBranchCode(String branchCode) {
		this.branchCode = branchCode;
	}

	public String getEmailId() {
		return emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getPriority() {
		return priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Override
	public String toString() {
		return "Complaint [complaintId=" + complaintId + ", accountId=" + accountId + ", branchCode=" + branchCode
				+ ", emailId=" + emailId + ", category=" + category + ", description=" + description + ", priority="
				+ priority + ", status=" + status + "]";
	}
	
		

}
